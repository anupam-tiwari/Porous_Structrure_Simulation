import random
import numpy as np 
dimensions = 10
carcoord = []
coordRadius = []
nspheres = 200
counter = 0
minradius = 0.50
maxradius = 0.400
width = 10
height = 10
length = 10
lstcircles = []
spherevols = 0 
maxvol = 0 
spherelist = []

class spheres: 
	def __init__(self, name): 
		self.name = name

for n in range(0, dimensions): 
    for m in range(0,dimensions):
        for l in range(0,dimensions):
            carcoord.append([n, m, l])

def inthesphere(x,y,z,center,radius):
    if (x-center[0])**2 + (y-center[1])**2 + (z-center[2])**2 <=radius**2: 
        print(x,y,z)
        carcoord.remove([x,y,z])
        return True
    else: 
        return False

for spheres in range(0, nspheres): 
    center = random.choice(carcoord)
    radius = random.uniform(minradius, maxradius) 
    print("center", center)
    print("radius", radius)
    coordRadius.append([center[0], center[1], center[2], radius])
    for n in range(0, len(carcoord)):
        if n < len(carcoord):
            inthesphere(carcoord[n][0], carcoord[n][1], carcoord[n][2], center, radius)

doc = FreeCAD.newDocument() 

box = doc.addObject("Part::Box", "myBox")

doc.addObject("Part::MultiFuse","Fusion")
vol = doc.getObject("Fusion")

box.Width = width 
box.Height = height
box.Length = length

print(coordRadius)


vo = box. ViewObject
vo.DisplayMode  = 'Wireframe'

for n in range(1, nspheres): 
	name = "sphere" + str(counter)
	sphere = doc.addObject("Part::Sphere", name)
	randr = random.uniform(minradius, maxradius) 
	sphere.Radius = coordRadius[n][3]
	sphere.Placement = FreeCAD.Placement(FreeCAD.Vector(coordRadius[n][0], coordRadius[n][1], coordRadius[n][2]), FreeCAD.Rotation(0, 0, 0))
	spherelist = spherelist + [sphere]
	doc.Fusion.Shapes = spherelist
	if n%20== 0: 
		doc.recompute()
		print(vol.Shape.Volume)
		if (vol.Shape.Volume > 500): 
			break
		
	counter = counter + 1


doc.recompute()
 

print(vol.Shape.Volume)
print(box.Shape.Volume)


Gui.activeDocument().activeView().viewIsometric()
Gui.SendMsgToActiveView("ViewFit")
doc.recompute()



